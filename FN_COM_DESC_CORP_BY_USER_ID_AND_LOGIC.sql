USE [GSIS_TEST]
GO
/****** Object:  UserDefinedFunction [dbo].[FN_COM_DESC_CORP_BY_USER_ID_AND_LOGIC]    Script Date: 2021-01-13 오후 6:25:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[FN_COM_DESC_CORP_BY_USER_ID_AND_LOGIC]
/* ================================================
프로그램ID  : FN_COM_DESC_CORP_BY_USER_ID_AND_LOGIC
시스템명     : GSIS
업무 명       : Common
프로그램명  : FN_COM_DESC_CORP_BY_USER_ID_AND_LOGIC
프로그램설명: 사용자 ID를 이용한 하위 거래선 찾기
					1. HQ 직원일 경우 하위 없이 HQ로 나옴
					2. Neurologica와 같은 예외를 위한 처리 적용
					3. CT의 경우 국내에 한하여 HQ같이 동작
					4. 티켓 엔지니어 설정의 경우에는 예외를 사용하지 않음

최초작성일  : 2018-10-17
최초작성자  : 이정열
실행예제    : 
				Sample Data
					@USER_ID: 92(HQ), 3383(NL사 Partner), 2455(CT)
				SELECT * FROM FN_COM_DESC_CORP_BY_USER_ID_AND_LOGIC(3383, 'Y', 'Y')
변경이력    :

참고사항    :
				select * from TB_S_USER where corp_id = 819

				select * from TB_C_CUSTOMER where upper_corp_id = 29 and use_yn = 'Y'
				select * from TB_C_CUSTOMER where cust_nm like 'AG%'   --167
				select * from TB_S_CORP_AUTH_EXCPT
		
================================================ */
(	
	@USER_ID			NUMERIC(10,0),
	@USE_EXCPT		CHAR(1),
	@USE_CT_HQ		CHAR(1)
)
RETURNS @RET_CORP_IDS TABLE 
				(
					ID NUMERIC(10, 0) IDENTITY(1, 1),
					CORP_ID				NUMERIC(10,0),
					ERP_CD				VARCHAR(30),
					COMPANY_CD		VARCHAR(30),
					CUST_NM			NVARCHAR(50),
					EN_CUST_NM		NVARCHAR(50)
				)
AS 
BEGIN   
    
    DECLARE @LOCAL_USER_ID		NUMERIC(10, 0)
	DECLARE @LOCAL_USE_EXCPT		CHAR(1)
	DECLARE @LOCAL_USE_CT_HQ	CHAR(1)

	SET @LOCAL_USER_ID		= @USER_ID
	SET @LOCAL_USE_EXCPT	= @USE_EXCPT
	SET @LOCAL_USE_CT_HQ	= @USE_CT_HQ

	DECLARE @LOCAL_USER_CORP_ID NUMERIC(20, 0)
	DECLARE @LOCAL_USER_CORP_ERP_CD VARCHAR(30)
	DECLARE @LOCAL_USER_CHANGE_CORP_ID NUMERIC(20, 0)
	DECLARE @LOCAL_USER_CUST_NM	NVARCHAR(50)
	DECLARE @LOCAL_USER_EN_CUST_NM NVARCHAR(50)
	DECLARE @LOCAL_USER_COMPANY_CD VARCHAR(30)
	DECLARE @LOCAL_USER_CORP_CO_GB_CD VARCHAR(10)

	SELECT @LOCAL_USER_CORP_ID = CORP_ID FROM TB_S_USER WHERE USER_ID = @LOCAL_USER_ID

	SELECT @LOCAL_USER_CORP_CO_GB_CD = CO_GB_CD FROM TB_C_CUSTOMER WHERE CORP_ID = @LOCAL_USER_CORP_ID

	IF(@LOCAL_USE_CT_HQ = 'Y' AND @LOCAL_USER_CORP_CO_GB_CD = 'CT')
		BEGIN

			SET @LOCAL_USER_CORP_ID = 3

		END

	SELECT 
		@LOCAL_USER_CORP_ERP_CD = ERP_CD, 
		@LOCAL_USER_CUST_NM = CUST_NM,
		@LOCAL_USER_EN_CUST_NM = EN_CUST_NM,
		@LOCAL_USER_COMPANY_CD = COMPANY_CD
	FROM TB_C_CUSTOMER 
	WHERE CORP_ID = @LOCAL_USER_CORP_ID

	IF(@LOCAL_USER_CORP_ID <> 2)
		BEGIN
			INSERT INTO @RET_CORP_IDS
			SELECT
				@LOCAL_USER_CORP_ID			AS CORP_ID,
				@LOCAL_USER_CORP_ERP_CD AS ERP_CD,
				@LOCAL_USER_COMPANY_CD	AS COMPANY_CD,
				@LOCAL_USER_CUST_NM		AS CUST_NM,
				@LOCAL_USER_EN_CUST_NM	AS EN_CUST_NM

			DECLARE @TCNT INT, @CNT INT
			DECLARE @TMP_CORP_ID NUMERIC(10,0)

			SET @TCNT = (SELECT COUNT(*) AS CNT FROM @RET_CORP_IDS)
			SET @CNT	= 1

			WHILE @TCNT >= @CNT
				BEGIN
					SET @TMP_CORP_ID = (SELECT CORP_ID FROM @RET_CORP_IDS WHERE ID = @CNT)

					INSERT INTO @RET_CORP_IDS
					SELECT CORP_ID, ERP_CD, COMPANY_CD, CUST_NM, EN_CUST_NM FROM TB_C_CUSTOMER WHERE UPPER_CORP_ID = @TMP_CORP_ID AND USE_YN = 'Y'

					SET @TCNT = (SELECT COUNT(*) AS CNT FROM @RET_CORP_IDS)
					SET @CNT = @CNT + 1
				END

		END

	IF(@LOCAL_USE_EXCPT = 'Y')
		BEGIN

			SELECT @LOCAL_USER_CHANGE_CORP_ID = CHANGE_CORP_ID FROM TB_S_CORP_AUTH_EXCPT WHERE CORP_ID = @LOCAL_USER_CORP_ID

			IF(@LOCAL_USER_CHANGE_CORP_ID IS NOT NULL)
				BEGIN
					SET @LOCAL_USER_CORP_ID = @LOCAL_USER_CHANGE_CORP_ID

					SELECT 
						@LOCAL_USER_CORP_ERP_CD = ERP_CD, 
						@LOCAL_USER_CUST_NM = CUST_NM,
						@LOCAL_USER_EN_CUST_NM = EN_CUST_NM,
						@LOCAL_USER_COMPANY_CD = COMPANY_CD
					FROM TB_C_CUSTOMER 
					WHERE CORP_ID = @LOCAL_USER_CORP_ID

					IF(@LOCAL_USER_CORP_ID <> 2)
						BEGIN
							INSERT INTO @RET_CORP_IDS
							SELECT
								@LOCAL_USER_CORP_ID			AS CORP_ID,
								@LOCAL_USER_CORP_ERP_CD AS ERP_CD,
								@LOCAL_USER_COMPANY_CD	AS COMPANY_CD,
								@LOCAL_USER_CUST_NM		AS CUST_NM,
								@LOCAL_USER_EN_CUST_NM	AS EN_CUST_NM


							SET @TCNT = (SELECT COUNT(*) AS CNT FROM @RET_CORP_IDS)
							SET @CNT	= 1

							WHILE @TCNT >= @CNT
								BEGIN
									SET @TMP_CORP_ID = (SELECT CORP_ID FROM @RET_CORP_IDS WHERE ID = @CNT)

									INSERT INTO @RET_CORP_IDS
									SELECT CORP_ID, ERP_CD, COMPANY_CD, CUST_NM, EN_CUST_NM FROM TB_C_CUSTOMER WHERE UPPER_CORP_ID = @TMP_CORP_ID AND USE_YN = 'Y'

									SET @TCNT = (SELECT COUNT(*) AS CNT FROM @RET_CORP_IDS)
									SET @CNT = @CNT + 1
								END

						END
				END

		END

	


   RETURN 
END
